/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { healthGetReady } from "../../funcs/healthGetReady.js";
import { formatResult, ToolDefinition } from "../tools.js";

export const tool$healthGetReady: ToolDefinition = {
  name: "health-get-ready",
  description: `Readiness probe

Kubernetes-compatible readiness probe that verifies the service is ready to accept traffic. Checks database connectivity to ensure the service can handle requests. Used by orchestrators to determine when to route traffic to this instance.`,
  tool: async (client, ctx) => {
    const [result, apiCall] = await healthGetReady(
      client,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
