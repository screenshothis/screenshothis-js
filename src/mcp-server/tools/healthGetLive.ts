/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { healthGetLive } from "../../funcs/healthGetLive.js";
import { formatResult, ToolDefinition } from "../tools.js";

export const tool$healthGetLive: ToolDefinition = {
  name: "health-get-live",
  description: `Liveness probe

Kubernetes-compatible liveness probe that indicates whether the service is alive and functioning. This lightweight check verifies the application is responsive and should be used by orchestrators to determine if the container needs to be restarted.`,
  tool: async (client, ctx) => {
    const [result, apiCall] = await healthGetLive(
      client,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
