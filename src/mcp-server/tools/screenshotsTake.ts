/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { screenshotsTake } from "../../funcs/screenshotsTake.js";
import * as operations from "../../models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: operations.GetV1ScreenshotsTakeRequest$inboundSchema,
};

export const tool$screenshotsTake: ToolDefinition<typeof args> = {
  name: "screenshots-take",
  description: `Generate optimized website screenshot

Captures high-quality screenshots of websites with advanced optimization features including smart caching, CDN integration, request deduplication, and quota management. Supports multiple image formats (JPEG, PNG, WebP) with customizable dimensions, device emulation, and viewport settings. Implements efficient S3 streaming for large images and conditional requests for optimal performance.`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await screenshotsTake(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
