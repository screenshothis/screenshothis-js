/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import * as operations from "../operations/index.js";
import { ScreenshothisError } from "./screenshothiserror.js";

/**
 * Service is not ready
 */
export type NotReadyErrorData = {
  status: operations.StatusNotReady;
  timestamp: string;
  error: string;
};

/**
 * Service is not ready
 */
export class NotReadyError extends ScreenshothisError {
  status: operations.StatusNotReady;
  timestamp: string;
  error: string;

  /** The original data that was passed to this error instance. */
  data$: NotReadyErrorData;

  constructor(
    err: NotReadyErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.status = err.status;
    this.timestamp = err.timestamp;
    this.error = err.error;

    this.name = "NotReadyError";
  }
}

/** @internal */
export const NotReadyError$inboundSchema: z.ZodType<
  NotReadyError,
  z.ZodTypeDef,
  unknown
> = z.object({
  status: operations.StatusNotReady$inboundSchema,
  timestamp: z.string(),
  error: z.string(),
  request$: z.instanceof(Request),
  response$: z.instanceof(Response),
  body$: z.string(),
})
  .transform((v) => {
    return new NotReadyError(v, {
      request: v.request$,
      response: v.response$,
      body: v.body$,
    });
  });

/** @internal */
export type NotReadyError$Outbound = {
  status: string;
  timestamp: string;
  error: string;
};

/** @internal */
export const NotReadyError$outboundSchema: z.ZodType<
  NotReadyError$Outbound,
  z.ZodTypeDef,
  NotReadyError
> = z.instanceof(NotReadyError)
  .transform(v => v.data$)
  .pipe(z.object({
    status: operations.StatusNotReady$outboundSchema,
    timestamp: z.string(),
    error: z.string(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace NotReadyError$ {
  /** @deprecated use `NotReadyError$inboundSchema` instead. */
  export const inboundSchema = NotReadyError$inboundSchema;
  /** @deprecated use `NotReadyError$outboundSchema` instead. */
  export const outboundSchema = NotReadyError$outboundSchema;
  /** @deprecated use `NotReadyError$Outbound` instead. */
  export type Outbound = NotReadyError$Outbound;
}
